//H A N G M A N  V I S U A L

import java.awt.*;      
import java.awt.event.*;
import javax.swing.*;
 

public class CGTemplate extends JFrame {
   // Define constants
   public static final int CANVAS_WIDTH  = 640;
   public static final int CANVAS_HEIGHT = 480;
 
   private DrawCanvas canvas;
 
   // Canvas
   public CGTemplate() {
      canvas = new DrawCanvas();
      canvas.setPreferredSize(new Dimension(CANVAS_WIDTH, CANVAS_HEIGHT));
 
      Container cp = getContentPane();
      cp.add(canvas);

 
      setDefaultCloseOperation(EXIT_ON_CLOSE);
      pack();
      setTitle("......");
      setVisible(true);
   }
 
  
   private class DrawCanvas extends JPanel {

      @Override
      public void paintComponent(Graphics g) {
         super.paintComponent(g);
         setBackground(Color.BLACK); //background
 
  
         // Drawing body
         g.setColor(Color.YELLOW);
         g.drawLine(300, 350, 300, 150); //body
         g.fillOval(250, 100, 100, 100); //head
         g.drawLine(300, 260, 200, 150); //arm L
         g.drawLine(300, 260, 400, 150); //arm R
         g.drawLine(300, 350, 400, 400); //FOOT R
         g.drawLine(300, 350, 200, 400); //FOOT L
         // Printing title
         g.setColor(Color.WHITE);
         g.setFont(new Font("Monospaced", Font.PLAIN, 50));
         g.drawString("Hangman.", 10, 40);
      }
   }
 
   // The entry main method
   public static void main(String[] args) {
      SwingUtilities.invokeLater(new Runnable() {
         @Override
         public void run() {
            new CGTemplate();
         }
      });
   }
}

// GETVALUE, GETWORD, COUNTWORD
     public static int getvalue(String userinput){
        System.out.print ("please enter a word");
        Scanner input = new Scanner(System.in);
        int value;
        while (true){
            try{
                value=input.nextInt();
                break;
            }
            catch (InputMismatchException err){
                input.next();
                System.out.print("Incorrect character");
            }
        }
        return value;
    } 
}
   // COUNT LETTERS
   public void countletters (){
   String word = null;
   String str = word;
int length = str.length( );
   public static void main(String[] args) {
      SwingUtilities.invokeLater(new Runnable() {
         @Override
         public void run() {
            new CGTemplate();
         }
      });
   }
}

////////////////////////////////////////////////////////////////////////////////////////////
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hangman;

import java.util.Scanner;

/**
 *
 * @author ocdsb
 */
public class Hangman {

    /**
     * @param args the command line arguments
     */
    String [] easy_words = {"fault", "stars", "books"};
    String [] medium_words = {"jacuzzi", "jukebox", "grizzly"};
    String [] hard_words = {"brilliant", "blackjack", "zigzagged"};
    int mistakes = 0;
    
    public static void main(String[] args) {
        
        System.out.println("Welcome to HANGMAN, [1] or [2] Players?");
        Scanner player_input = new Scanner(System.in);
        int player_num = player_input.nextInt();
        
        if (player_num == 1){
            Scanner category_input = new Scanner(System.in);
            System.out.println("Choose a difficulty level(easy/medium/hard)");
            String category = category_input.nextLine();
            if("easy".equalsIgnoreCase(category)){
                Hangman easy = new Hangman();
                //easy.getword(easy_words);
                for(int i=1 ; i<=5 ; i++){
                    System.out.print("__ ");
                }
                //easy.getvalue()
            }
            else if("medium".equalsIgnoreCase(category)){
                Hangman medium = new Hangman();
                //medium.getword(medium_words);
                for(int i=1 ; i<=7 ; i++){
                    System.out.print("__ ");
                }
                //medium.getvalue()
                }
            else if("hard".equalsIgnoreCase(category)){
                Hangman medium = new Hangman();
                //hard.getword(hard_words);
                for(int i=1 ; i<=9 ; i++){
                    System.out.print("__ ");
                }
                //hard.getvalue()
                }
            else{
                //call exception method
            }
 
        }
        else if(player_num == 2){
            Player2 player_2 = new Player2();
            //call get word method from player 2 class
            //call spaces for player 2 method (parameter word)
            System.out.println("Hand over computer to player 2");
            //call method for getting input for OG class
            player_2.testMethod();
        }
    }
}
///////////////////////////////////////////////////////////////////////////////////////
